import { Problem } from '../../types';

export const typescriptProblems: Problem[] = [
  {
    id: 'ts-what-is-typescript',
    title: 'What is TypeScript and why use it?',
    difficulty: 'Easy',
    pattern: 'TypeScript Fundamentals',
    category: 'TypeScript',
    leetcodeUrl: '',
    estimatedTime: 5,
    tags: ['TypeScript', 'Basics', 'Benefits'],
    companies: ['Google', 'Microsoft', 'Amazon'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'ts-types-vs-interfaces',
    title: 'Types vs Interfaces',
    difficulty: 'Medium',
    pattern: 'TypeScript Fundamentals',
    category: 'TypeScript',
    leetcodeUrl: '',
    estimatedTime: 10,
    tags: ['Types', 'Interfaces', 'TypeScript'],
    companies: ['Microsoft', 'Google', 'Airbnb'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'ts-generics',
    title: 'Explain Generics in TypeScript',
    difficulty: 'Medium',
    pattern: 'Advanced TypeScript',
    category: 'TypeScript',
    leetcodeUrl: '',
    estimatedTime: 12,
    tags: ['Generics', 'Type Safety', 'TypeScript'],
    companies: ['Google', 'Facebook', 'Microsoft'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'ts-utility-types',
    title: 'TypeScript Utility Types',
    difficulty: 'Medium',
    pattern: 'Advanced TypeScript',
    category: 'TypeScript',
    leetcodeUrl: '',
    estimatedTime: 15,
    tags: ['Utility Types', 'Partial', 'Omit', 'Pick'],
    companies: ['Microsoft', 'Amazon', 'Uber'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'ts-type-guards',
    title: 'Type Guards and Type Narrowing',
    difficulty: 'Medium',
    pattern: 'Type Safety',
    category: 'TypeScript',
    leetcodeUrl: '',
    estimatedTime: 10,
    tags: ['Type Guards', 'Narrowing', 'Safety'],
    companies: ['Google', 'Microsoft', 'Netflix'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'ts-union-intersection',
    title: 'Union and Intersection Types',
    difficulty: 'Easy',
    pattern: 'TypeScript Fundamentals',
    category: 'TypeScript',
    leetcodeUrl: '',
    estimatedTime: 8,
    tags: ['Union Types', 'Intersection', 'TypeScript'],
    companies: ['Amazon', 'Microsoft', 'Adobe'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'ts-decorators',
    title: 'Decorators in TypeScript',
    difficulty: 'Hard',
    pattern: 'Advanced TypeScript',
    category: 'TypeScript',
    leetcodeUrl: '',
    estimatedTime: 15,
    tags: ['Decorators', 'Metadata', 'Advanced'],
    companies: ['Google', 'Facebook', 'Microsoft'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'ts-enum',
    title: 'Enums in TypeScript',
    difficulty: 'Easy',
    pattern: 'TypeScript Fundamentals',
    category: 'TypeScript',
    leetcodeUrl: '',
    estimatedTime: 6,
    tags: ['Enums', 'Constants', 'TypeScript'],
    companies: ['Microsoft', 'Amazon', 'Oracle'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'ts-mapped-types',
    title: 'Mapped Types',
    difficulty: 'Hard',
    pattern: 'Advanced TypeScript',
    category: 'TypeScript',
    leetcodeUrl: '',
    estimatedTime: 15,
    tags: ['Mapped Types', 'Advanced', 'Transformations'],
    companies: ['Google', 'Microsoft', 'Airbnb'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'ts-conditional-types',
    title: 'Conditional Types',
    difficulty: 'Hard',
    pattern: 'Advanced TypeScript',
    category: 'TypeScript',
    leetcodeUrl: '',
    estimatedTime: 12,
    tags: ['Conditional Types', 'Advanced', 'Logic'],
    companies: ['Facebook', 'Netflix', 'Microsoft'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'ts-module-resolution',
    title: 'Module Resolution in TypeScript',
    difficulty: 'Medium',
    pattern: 'Configuration',
    category: 'TypeScript',
    leetcodeUrl: '',
    estimatedTime: 10,
    tags: ['Modules', 'Resolution', 'Configuration'],
    companies: ['Microsoft', 'Google', 'Amazon'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'ts-never-unknown-any',
    title: 'never, unknown, and any types',
    difficulty: 'Medium',
    pattern: 'Type Safety',
    category: 'TypeScript',
    leetcodeUrl: '',
    estimatedTime: 8,
    tags: ['never', 'unknown', 'any', 'Types'],
    companies: ['Google', 'Microsoft', 'Uber'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'ts-readonly-const',
    title: 'readonly vs const',
    difficulty: 'Easy',
    pattern: 'TypeScript Fundamentals',
    category: 'TypeScript',
    leetcodeUrl: '',
    estimatedTime: 5,
    tags: ['readonly', 'const', 'Immutability'],
    companies: ['Amazon', 'Microsoft', 'Adobe'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'ts-type-assertion',
    title: 'Type Assertions and Type Casting',
    difficulty: 'Easy',
    pattern: 'TypeScript Fundamentals',
    category: 'TypeScript',
    leetcodeUrl: '',
    estimatedTime: 7,
    tags: ['Type Assertion', 'Casting', 'TypeScript'],
    companies: ['Google', 'Facebook', 'Netflix'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'ts-namespaces-modules',
    title: 'Namespaces vs Modules',
    difficulty: 'Medium',
    pattern: 'Organization',
    category: 'TypeScript',
    leetcodeUrl: '',
    estimatedTime: 10,
    tags: ['Namespaces', 'Modules', 'Organization'],
    companies: ['Microsoft', 'Oracle', 'Salesforce'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'ts-abstract-classes',
    title: 'Abstract Classes in TypeScript',
    difficulty: 'Medium',
    pattern: 'OOP',
    category: 'TypeScript',
    leetcodeUrl: '',
    estimatedTime: 8,
    tags: ['Abstract', 'Classes', 'OOP'],
    companies: ['Google', 'Amazon', 'Microsoft'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'ts-index-signatures',
    title: 'Index Signatures',
    difficulty: 'Medium',
    pattern: 'Advanced TypeScript',
    category: 'TypeScript',
    leetcodeUrl: '',
    estimatedTime: 10,
    tags: ['Index Signatures', 'Dynamic Keys', 'Objects'],
    companies: ['Microsoft', 'Google', 'Airbnb'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'ts-discriminated-unions',
    title: 'Discriminated Unions',
    difficulty: 'Medium',
    pattern: 'Type Safety',
    category: 'TypeScript',
    leetcodeUrl: '',
    estimatedTime: 12,
    tags: ['Discriminated Unions', 'Pattern Matching', 'Safety'],
    companies: ['Facebook', 'Netflix', 'Uber'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'ts-function-overloading',
    title: 'Function Overloading',
    difficulty: 'Medium',
    pattern: 'Functions',
    category: 'TypeScript',
    leetcodeUrl: '',
    estimatedTime: 10,
    tags: ['Function Overloading', 'Functions', 'Signatures'],
    companies: ['Google', 'Microsoft', 'Amazon'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'ts-template-literal-types',
    title: 'Template Literal Types',
    difficulty: 'Hard',
    pattern: 'Advanced TypeScript',
    category: 'TypeScript',
    leetcodeUrl: '',
    estimatedTime: 12,
    tags: ['Template Literals', 'String Manipulation', 'Advanced'],
    companies: ['Microsoft', 'Google', 'Netflix'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'ts-infer-keyword',
    title: 'The infer keyword',
    difficulty: 'Hard',
    pattern: 'Advanced TypeScript',
    category: 'TypeScript',
    leetcodeUrl: '',
    estimatedTime: 15,
    tags: ['infer', 'Conditional Types', 'Advanced'],
    companies: ['Google', 'Facebook', 'Microsoft'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'ts-tsconfig',
    title: 'Understanding tsconfig.json',
    difficulty: 'Medium',
    pattern: 'Configuration',
    category: 'TypeScript',
    leetcodeUrl: '',
    estimatedTime: 10,
    tags: ['Configuration', 'tsconfig', 'Setup'],
    companies: ['Microsoft', 'Amazon', 'Google'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'ts-declaration-files',
    title: 'Declaration Files (.d.ts)',
    difficulty: 'Medium',
    pattern: 'Configuration',
    category: 'TypeScript',
    leetcodeUrl: '',
    estimatedTime: 10,
    tags: ['Declaration Files', 'Types', 'Libraries'],
    companies: ['Google', 'Microsoft', 'Uber'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'ts-type-vs-value',
    title: 'Type Space vs Value Space',
    difficulty: 'Medium',
    pattern: 'TypeScript Fundamentals',
    category: 'TypeScript',
    leetcodeUrl: '',
    estimatedTime: 8,
    tags: ['Type Space', 'Value Space', 'Concepts'],
    companies: ['Microsoft', 'Google', 'Amazon'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'ts-variance',
    title: 'Covariance and Contravariance',
    difficulty: 'Hard',
    pattern: 'Advanced TypeScript',
    category: 'TypeScript',
    leetcodeUrl: '',
    estimatedTime: 15,
    tags: ['Variance', 'Advanced', 'Type Theory'],
    companies: ['Google', 'Facebook', 'Microsoft'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  }
];
