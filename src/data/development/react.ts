import { LanguageProblem } from '../../types';

export const reactProblems: LanguageProblem[] = [
  {
    id: 'react-what-is-react',
    title: 'What is React and its key features?',
    difficulty: 'Easy',
    platformLinks: [],
    category: 'React.js',
    description: 'Interview question',
    estimatedTime: 5,
    topics: ['React', 'Basics', 'Features'],
    companies: ['Facebook', 'Google', 'Amazon'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'react-jsx',
    title: 'What is JSX?',
    difficulty: 'Easy',
    platformLinks: [],
    category: 'React.js',
    description: 'Interview question',
    estimatedTime: 5,
    topics: ['JSX', 'Syntax', 'React'],
    companies: ['Facebook', 'Netflix', 'Airbnb'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'react-virtual-dom',
    title: 'Explain Virtual DOM',
    difficulty: 'Medium',
    platformLinks: [],
    category: 'React.js',
    description: 'Interview question',
    estimatedTime: 10,
    topics: ['Virtual DOM', 'Performance', 'Reconciliation'],
    companies: ['Facebook', 'Google', 'Microsoft'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'react-hooks',
    title: 'React Hooks: useState, useEffect, useContext',
    difficulty: 'Medium',
    platformLinks: [],
    category: 'React.js',
    description: 'Interview question',
    estimatedTime: 15,
    topics: ['Hooks', 'useState', 'useEffect', 'useContext'],
    companies: ['Facebook', 'Netflix', 'Uber'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'react-useeffect-cleanup',
    title: 'useEffect cleanup and dependencies',
    difficulty: 'Medium',
    platformLinks: [],
    category: 'React.js',
    description: 'Interview question',
    estimatedTime: 12,
    topics: ['useEffect', 'Cleanup', 'Dependencies'],
    companies: ['Google', 'Amazon', 'Airbnb'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'react-usememo-usecallback',
    title: 'useMemo vs useCallback',
    difficulty: 'Medium',
    platformLinks: [],
    category: 'React.js',
    description: 'Interview question',
    estimatedTime: 10,
    topics: ['useMemo', 'useCallback', 'Performance', 'Memoization'],
    companies: ['Facebook', 'Netflix', 'Microsoft'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'react-custom-hooks',
    title: 'Creating Custom Hooks',
    difficulty: 'Medium',
    platformLinks: [],
    category: 'React.js',
    description: 'Interview question',
    estimatedTime: 12,
    topics: ['Custom Hooks', 'Reusability', 'React'],
    companies: ['Airbnb', 'Uber', 'Spotify'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'react-context-api',
    title: 'Context API for State Management',
    difficulty: 'Medium',
    platformLinks: [],
    category: 'React.js',
    description: 'Interview question',
    estimatedTime: 15,
    topics: ['Context API', 'State Management', 'Props Drilling'],
    companies: ['Facebook', 'Google', 'Amazon'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'react-lifecycle-methods',
    title: 'Component Lifecycle Methods',
    difficulty: 'Medium',
    platformLinks: [],
    category: 'React.js',
    description: 'Interview question',
    estimatedTime: 12,
    topics: ['Lifecycle', 'Class Components', 'React'],
    companies: ['Microsoft', 'Oracle', 'Adobe'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'react-controlled-uncontrolled',
    title: 'Controlled vs Uncontrolled Components',
    difficulty: 'Easy',
    platformLinks: [],
    category: 'React.js',
    description: 'Interview question',
    estimatedTime: 8,
    topics: ['Forms', 'Controlled', 'Uncontrolled'],
    companies: ['Google', 'Amazon', 'Netflix'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'react-keys',
    title: 'Why are keys important in React lists?',
    difficulty: 'Easy',
    platformLinks: [],
    category: 'React.js',
    description: 'Interview question',
    estimatedTime: 7,
    topics: ['Keys', 'Lists', 'Reconciliation'],
    companies: ['Facebook', 'Google', 'Uber'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'react-props-vs-state',
    title: 'Props vs State',
    difficulty: 'Easy',
    platformLinks: [],
    category: 'React.js',
    description: 'Interview question',
    estimatedTime: 6,
    topics: ['Props', 'State', 'React'],
    companies: ['Amazon', 'Microsoft', 'Adobe'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'react-error-boundaries',
    title: 'Error Boundaries',
    difficulty: 'Medium',
    platformLinks: [],
    category: 'React.js',
    description: 'Interview question',
    estimatedTime: 10,
    topics: ['Error Boundaries', 'Error Handling', 'React'],
    companies: ['Facebook', 'Netflix', 'Airbnb'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'react-ref',
    title: 'useRef and forwardRef',
    difficulty: 'Medium',
    platformLinks: [],
    category: 'React.js',
    description: 'Interview question',
    estimatedTime: 10,
    topics: ['useRef', 'forwardRef', 'DOM Access'],
    companies: ['Google', 'Amazon', 'Microsoft'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'react-higher-order-components',
    title: 'Higher Order Components (HOC)',
    difficulty: 'Hard',
    platformLinks: [],
    category: 'React.js',
    description: 'Interview question',
    estimatedTime: 15,
    topics: ['HOC', 'Component Composition', 'Reusability'],
    companies: ['Facebook', 'Airbnb', 'Uber'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'react-render-props',
    title: 'Render Props Pattern',
    difficulty: 'Hard',
    platformLinks: [],
    category: 'React.js',
    description: 'Interview question',
    estimatedTime: 12,
    topics: ['Render Props', 'Component Composition', 'Pattern'],
    companies: ['Facebook', 'Netflix', 'Google'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'react-lazy-suspense',
    title: 'Code Splitting with React.lazy and Suspense',
    difficulty: 'Medium',
    platformLinks: [],
    category: 'React.js',
    description: 'Interview question',
    estimatedTime: 12,
    topics: ['Code Splitting', 'React.lazy', 'Suspense', 'Performance'],
    companies: ['Google', 'Facebook', 'Amazon'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'react-portals',
    title: 'React Portals',
    difficulty: 'Medium',
    platformLinks: [],
    category: 'React.js',
    description: 'Interview question',
    estimatedTime: 10,
    topics: ['Portals', 'DOM', 'Modals'],
    companies: ['Facebook', 'Netflix', 'Uber'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'react-synthetic-events',
    title: 'Synthetic Events',
    difficulty: 'Medium',
    platformLinks: [],
    category: 'React.js',
    description: 'Interview question',
    estimatedTime: 8,
    topics: ['Events', 'Synthetic Events', 'Cross-browser'],
    companies: ['Facebook', 'Google', 'Microsoft'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'react-strict-mode',
    title: 'React StrictMode',
    difficulty: 'Easy',
    platformLinks: [],
    category: 'React.js',
    description: 'Interview question',
    estimatedTime: 7,
    topics: ['StrictMode', 'Development', 'Best Practices'],
    companies: ['Facebook', 'Google', 'Amazon'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'react-fiber',
    title: 'React Fiber Architecture',
    difficulty: 'Hard',
    platformLinks: [],
    category: 'React.js',
    description: 'Interview question',
    estimatedTime: 20,
    topics: ['Fiber', 'Architecture', 'Reconciliation', 'Performance'],
    companies: ['Facebook', 'Google', 'Netflix'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'react-concurrent-features',
    title: 'Concurrent Features (React 18)',
    difficulty: 'Hard',
    platformLinks: [],
    category: 'React.js',
    description: 'Interview question',
    estimatedTime: 15,
    topics: ['Concurrent Mode', 'React 18', 'Transitions'],
    companies: ['Facebook', 'Google', 'Microsoft'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'react-server-components',
    title: 'React Server Components',
    difficulty: 'Hard',
    platformLinks: [],
    category: 'React.js',
    description: 'Interview question',
    estimatedTime: 15,
    topics: ['Server Components', 'RSC', 'Performance'],
    companies: ['Facebook', 'Vercel', 'Netflix'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'react-performance-optimization',
    title: 'React Performance Optimization Techniques',
    difficulty: 'Hard',
    platformLinks: [],
    category: 'React.js',
    description: 'Interview question',
    estimatedTime: 20,
    topics: ['Performance', 'Optimization', 'Best Practices'],
    companies: ['Google', 'Facebook', 'Netflix'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  },
  {
    id: 'react-testing',
    title: 'Testing React Components',
    difficulty: 'Medium',
    platformLinks: [],
    category: 'React.js',
    description: 'Interview question',
    estimatedTime: 15,
    topics: ['Testing', 'Jest', 'React Testing Library'],
    companies: ['Google', 'Amazon', 'Airbnb'],
    userStatus: { completed: false, attempted: false, lastAttempted: null, timeSpent: 0 }
  }
];
